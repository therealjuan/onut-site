{"version":3,"sources":["webpack:///./src/components/template.js","webpack:///./src/pages/experiments/fl1.png","webpack:///./src/pages/experiments/flowers2.js"],"names":["Template","children","location","id","module","exports","FlowersExperiment2","props","state","data","city","count","getTemperature","key","updateCount","this","LondonCsv","length","setState","componentDidMount","intervalId","setInterval","componentWillUnmount","clearInterval","getStyleForImage","filter","backgroundImage","Flower1","render","bodyAttributes","class","className","style","React","Component"],"mappings":"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","file":"component---src-pages-experiments-flowers-2-js-0af648f24ca1d3980b12.js","sourcesContent":["import React from 'react'\n\nconst Template = ({ children, location }) => (\n    <section id=\"main-content\">\n        {children}\n    </section>\n)\n\nexport default Template","module.exports = __webpack_public_path__ + \"static/fl1-6550a1daf9f1a5f429badc024aa2401c.png\";","import React from 'react'\nimport Template from '../../components/template'\nimport Helmet from 'react-helmet'\nimport './Flowers.css'\nimport Flower1 from './fl1.png'\nimport LondonCsv from './weather-london.json'\n\nexport default class FlowersExperiment2 extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      city: 'London',\n      count: 0\n    }\n  }\n\n  getTemperature(key) {\n\n  }\n\n  updateCount() {\n    if (this.state.count < LondonCsv.length - 1)\n      this.setState({ count: this.state.count + 1})\n    else\n      this.setState({ count: 0})\n\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => this.updateCount(), 2000)\n  }\n\n  componentWillUnmount(){\n     clearInterval(this.intervalId)\n  }\n\n  getStyleForImage(key) {\n\n    return {\n      filter: 'saturate('+ LondonCsv[this.state.count][key] + ')',\n      backgroundImage: 'url(' + Flower1 + ')'}\n  }\n\n  render() {\n    return(\n            // Inside your component\n      <Template>\n      <Helmet\n      bodyAttributes={{\n          class: 'no-overflow'\n      }}\n      />\n      <div className=\"flowers-year\">{LondonCsv[this.state.count]['Year']}</div>\n      <div className=\"flowers-experiment-2\">\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"JAN\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['JAN']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n        <div style={this.getStyleForImage(\"FEB\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['FEB']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"MAR\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['MAR']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"APR\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['APR']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"MAY\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['MAY']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"JUN\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['JUN']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"JUL\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['JUL']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"AUG\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['AUG']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"SEP\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['SEP']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"OCT\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['OCT']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"NOV\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['NOV']} °C</div>\n        </div>\n        <div className=\"grid-experiment-image\" style={{backgroundImage: 'url(' + Flower1 + ')'}}>\n          <div style={this.getStyleForImage(\"DEC\")}></div>\n          <div className=\"flowers-temperature\">{LondonCsv[this.state.count]['DEC']} °C</div>\n        </div>\n      </div>\n    </Template>\n    )\n  }\n}"],"sourceRoot":""}