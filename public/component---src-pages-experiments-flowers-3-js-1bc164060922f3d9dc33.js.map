{"version":3,"sources":["webpack:///./src/pages/experiments/fl1.png","webpack:///./src/pages/experiments/flowers3.js"],"names":["module","exports","FlowersExperiment","props","updateCity","e","setState","city","currentTarget","innerHTML","retrieveWeatherData","state","data","fetch","this","then","response","ok","json","main","componentDidMount","intervalId","setInterval","componentWillUnmount","clearInterval","getStyleForImage","filter","temp","render","location","className","style","alt","src","Flower1","onClick","bind","pressure","humidity","temp_min","temp_max","React","Component"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,mD,2JCKtBC,E,oBAEnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAsBFC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,KAAMF,EAAEG,cAAcC,YACtC,EAAKC,uBAtBL,EAAKC,MAAQ,CACXC,KAAM,GACNL,KAAM,UALS,E,kHAUnBG,oBAAA,WAAuB,IAAD,OACpBG,MAAM,oDAAsDC,KAAKH,MAAMJ,KAAO,wDAC3EQ,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,UAEnBH,MAAK,SAAAH,GACJ,EAAKN,SAAS,CACZM,KAAMA,EAAKO,W,EAUnBC,kBAAA,WAAqB,IAAD,OAChBN,KAAKJ,sBACLI,KAAKO,WAAaC,aAAY,kBAAM,EAAKZ,wBAAuB,M,EAGpEa,qBAAA,WACEC,cAAcV,KAAKO,a,EAGrBI,iBAAA,WACE,MAAO,CAACC,OAAQ,YAAaZ,KAAKH,MAAMC,KAAKe,KAAO,M,EAGtDC,OAAA,WAAU,IAEAhB,EAASE,KAAKH,MAAdC,KACR,OACE,kBAAC,IAAD,CAAQiB,SAAUf,KAAKX,MAAM0B,UAC7B,yBAAKC,UAAU,WACb,yBAAKC,MAAOjB,KAAKW,mBAAoBO,IAAI,GAAGC,IAAKC,MAC/C,yBAAKJ,UAAU,QACb,4BAAQK,QAASrB,KAAKV,WAAWgC,KAAKtB,OAAtC,SACA,4BAAQqB,QAASrB,KAAKV,WAAWgC,KAAKtB,OAAtC,UACA,4BAAQqB,QAASrB,KAAKV,WAAWgC,KAAKtB,OAAtC,UACA,4BAAQqB,QAASrB,KAAKV,WAAWgC,KAAKtB,OAAtC,SACA,4BAAQqB,QAASrB,KAAKV,WAAWgC,KAAKtB,OAAtC,YACA,4BAAQqB,QAASrB,KAAKV,WAAWgC,KAAKtB,OAAtC,YACA,sCAAYF,EAAKe,MACjB,0CAAgBf,EAAKyB,UACrB,0CAAgBzB,EAAK0B,UACrB,0CAAgB1B,EAAK2B,UACrB,0CAAgB3B,EAAK4B,c,GA7DcC,IAAMC","file":"component---src-pages-experiments-flowers-3-js-1bc164060922f3d9dc33.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/fl1-6550a1daf9f1a5f429badc024aa2401c.png\";","import React from 'react'\nimport Layout from '../../components/layout'\nimport './Flowers.css'\nimport Flower1 from './fl1.png'\n\nexport default class FlowersExperiment extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      city: 'London'\n    }\n\n  }\n\n  retrieveWeatherData() {\n    fetch('http://api.openweathermap.org/data/2.5/weather?q=' + this.state.city + '&units=metric&APPID=f8a509a0618c0f680acbc88700e17efe')\n      .then(response => {\n        if (response.ok)\n          return response.json()\n      })\n      .then(data => {\n        this.setState({\n          data: data.main\n        })\n      })\n  }\n\n  updateCity = (e) => {\n    this.setState({ city: e.currentTarget.innerHTML})\n    this.retrieveWeatherData()\n  }\n\n  componentDidMount() {\n      this.retrieveWeatherData()\n      this.intervalId = setInterval(() => this.retrieveWeatherData(), 30000)\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.intervalId)\n  }\n\n  getStyleForImage() {\n    return {filter: 'saturate('+ this.state.data.temp + ')'}\n  }\n\n  render() {\n\n    const { data } = this.state\n    return(\n      <Layout location={this.props.location}>\n      <div className=\"flowers\">\n        <img style={this.getStyleForImage()} alt=\"\" src={Flower1} />\n          <div className=\"data\">\n            <button onClick={this.updateCity.bind(this)}>Paris</button>\n            <button onClick={this.updateCity.bind(this)}>London</button>\n            <button onClick={this.updateCity.bind(this)}>Madrid</button>\n            <button onClick={this.updateCity.bind(this)}>Tokyo</button>\n            <button onClick={this.updateCity.bind(this)}>New York</button>\n            <button onClick={this.updateCity.bind(this)}>Oymyakon</button>\n            <div>temp: {data.temp}</div>\n            <div>pressure: {data.pressure}</div>\n            <div>humidity: {data.humidity}</div>\n            <div>temp_min: {data.temp_min}</div>\n            <div>temp_max: {data.temp_max}</div>\n          </div>\n        </div>\n    </Layout>\n    )\n  }\n}"],"sourceRoot":""}